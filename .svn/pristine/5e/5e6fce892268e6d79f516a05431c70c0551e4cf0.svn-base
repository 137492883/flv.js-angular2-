import {Component, OnInit} from '@angular/core';
import {ActivatedRoute, Router} from '@angular/router';
import {User} from '../../../../../shared/model/user';
import {SystemService} from '../../../../../shared/services/sysmanage/system.service';
import {Paging} from '../../../../../shared/model/Paging';
import {routerTransition} from '../../../../../router.animations';
import {ITreeOptions} from "angular-tree-component";

@Component({
    selector: 'app-device-group-list',
    templateUrl: './list.component.html',
    styleUrls: ['./list.component.scss'],
    animations: [routerTransition()],
})
export class ListComponent implements OnInit {

    users: Array<User> = new Array<User>();
    queryResult: Paging = new Paging();
    groupQuery: User = new User();
    nodes: any;
    treeOptions: ITreeOptions = {
        isExpandedField: 'expanded',
        idField: 'uuid',
        nodeHeight: 23,
        animateExpand: true,
        animateSpeed: 30,
        animateAcceleration: 1.2
    }
    constructor(public route: ActivatedRoute, public router: Router, public systemService: SystemService) {
        this.nodes = [
            {
                id: 1,
                name: 'root1',
                children: [
                    {id: 2, name: 'child1'},
                    {id: 3, name: 'child2'}
                ]
            },
            {
                id: 4,
                name: 'root2',
                children: [
                    {id: 5, name: 'child2.1'},
                    {
                        id: 6,
                        name: 'child2.2',
                        children: [
                            {id: 7, name: 'subsub'}
                        ]
                    }
                ]
            }
        ];
    }

    ngOnInit() {
        this.systemService.find('findDeviceGroup', this.groupQuery).subscribe((result) => {
            this.queryResult = result;
            this.users = result.content;
        })
    }

    onPageChange(event: any) {
        this.groupQuery.currentPage = event.page - 1;
        this.systemService.find('findDeviceGroup', this.groupQuery).subscribe((result) => {
            this.queryResult = result
            this.users = result.content;
        })
    }

    addUser() {
        this.router.navigate(['/system/tenant/user/save', 'null']);
    }

}
